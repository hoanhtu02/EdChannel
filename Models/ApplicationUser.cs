using Microsoft.AspNetCore.Identity;
using System.ComponentModel.DataAnnotations.Schema;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel;

namespace EdChannel.Models
{
    public class ApplicationUser : IdentityUser<long>
    {

        /* 
            Id	The unique id to identify the user.
            First Name	The first name of the user.
            Middle Name	The middle name of the user.
            Last Name	The last name of the user.
            Mobile	The mobile number of the user. It can be used for login and registration purposes.
            Email	The email of the user. It can be used for login and registration purposes.
            Password Hash	The password hash generated by the appropriate algorithm. We must avoid storing plain or encrypted passwords.
            Admin	The flag to identify whether the user is an administrator. It's not required if RBAC tables are created by following the RBAC database design.
            Registered At	This column can be used to calculate the life of the user with the application.
            Last Login	It can be used to identify the last login of the user.
            Intro	The brief introduction of the Vendor User to be displayed on the Product Page.
            Profile	The vendor details to be displayed on the Product Page.
         */
        [StringLength(50)]
        public string? FirstName { get; set; }
        [StringLength(50)]
        public string? LastName { get; set; }
        [Required]
        public bool Admin { get; set; } = false;
        [Required]
        public bool Vendor { get; set; } = false;
        public string? Image { get; set; }
        [NotMapped]
        [DisplayName("Upload File")]
        public IFormFile? ImageFile { get; set; }
        public string? Intro { get; set; }
        public string? Profile { get; set; }
        [Display(Name = "Full Name")]
        public string FullName
        {
            get
            {
                return LastName + " " + FirstName;
            }
        }
        public ICollection<Product> Products { get; set; } = new List<Product>();

        public ICollection<Transaction> Transactions { get; set; } = new List<Transaction>();
        public ICollection<Cart> Carts { get; set; } = new List<Cart>();
        public ICollection<Order> Orders { get; set; } = new List<Order>();
    }
}
